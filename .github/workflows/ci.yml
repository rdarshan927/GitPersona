name: CI

on:
  push:
    branches: [main]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  lint:
    name: Lint (ruff + black)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install dev tools
        run: |
          python -m pip install -U pip
          python -m pip install ruff black
      - name: Run ruff
        run: ruff check .
      - name: Check formatting (black)
        run: black --check .

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install -e .
      - name: Run tests with coverage
        run: |
          coverage run -m pytest -q
          coverage xml -i
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml

  release:
    name: Release to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Build and publish
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install -U pip build twine
          python -m build
          python -m twine upload -u __token__ -p "$PYPI_API_TOKEN" dist/*
